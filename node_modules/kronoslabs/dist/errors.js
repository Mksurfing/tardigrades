"use strict";
/**
 * Custom exceptions for Kronos Labs API
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationError = exports.KronosLabsError = void 0;
class KronosLabsError extends Error {
    constructor(message, statusCode, response) {
        super(message);
        this.name = "KronosLabsError";
        this.statusCode = statusCode;
        this.response = response;
        // Maintains proper stack trace for where our error was thrown (only available on V8)
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, KronosLabsError);
        }
    }
}
exports.KronosLabsError = KronosLabsError;
class AuthenticationError extends KronosLabsError {
    constructor(message) {
        super(message, 401);
        this.name = "AuthenticationError";
    }
}
exports.AuthenticationError = AuthenticationError;
